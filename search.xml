<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>DVWA靶场搭建</title>
    <url>/2022/10/06/DVWA%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="前言">前言</h1>
<p>在近些年网络安全的高速发展中，初学者已经很难找到一个网站进行渗透了，曾几何时，一个漏洞，一个工具就可以在网上找到很多有漏洞的网站去体验，当然渗透一个未经授权的系统是非法的。因此，为了能够较为真实地学习Web渗透的各种技术，就需要找一个专门用于学习的Web演练平台，人们将这种用于练习渗透的平台称为“靶场”。</p>
<p>本文介绍如何搭建由PHP+MySQL编写开发的一套靶场系统DVWA，由于该系统提供了多个安全演练级别，因此可以逐步地来提高Web渗透的技术。DVWA是一套开源的系统，在练习Web渗透技术的同时，也可以通过阅读源码学习到对于各种漏洞的安全防护编码。</p>
<span id="more"></span>
<h2 id="一dvwa介绍">一、DVWA介绍</h2>
<p>DVWA（Damn Vulnerable Web
Application）是一个用来进行安全脆弱性鉴定的PHP/MySQL
Web应用，旨在为安全专业人员测试自己的专业技能和工具提供合法的环境，帮助web开发者更好的理解web应用安全防范的过程。</p>
<p>DVWA共有十三个模块，分别是</p>
<ol type="1">
<li><p>Brute Force</p></li>
<li><p>Command Injection</p></li>
<li><p>CSRF</p></li>
<li><p>File Inclusion</p></li>
<li><p>File Upload</p></li>
<li><p>Insecure CAPTCHA</p></li>
<li><p>SQL Injection</p></li>
<li><p>SQL Injection（Blind）</p></li>
<li><p>XSS（DOM）</p></li>
<li><p>XSS（Reflected）</p></li>
<li><p>XSS（Stored）</p></li>
<li><p>CSP Bypass</p></li>
<li><p>Javascript</p></li>
</ol>
<h2 id="二phpstudy安装部署">二、phpStudy安装部署</h2>
<p>首先，为模拟真实的web环境，安装DVWA靶场前需要安装相应的WAMP；</p>
<ul>
<li>W：windows</li>
<li>A：Apache</li>
<li>M：MySQL</li>
<li>P：PHP</li>
</ul>
<p>其中phpstudy提供一站式安装，以下为详细安装部署步骤</p>
<h4 id="官网下载安装包">官网下载安装包</h4>
<p>官网：<a href="https://www.xp.cn/">phpStudy官网</a></p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/phpStudy官网.png" /></p>
<p>下载对应的版本，本文使用的是phpStudy 2018版</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/下载phpStudy2018版.png" /></p>
<p>安装完毕后可以直接启动相关服务，极大的节省了环境部署的时间</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/启动phpStudy.png" /></p>
<h2 id="三dvwa安装部署">三、DVWA安装部署</h2>
<h3 id="官网下载安装包-1">官网下载安装包</h3>
<p>官网：<a
href="https://github.com/digininja/DVWA/archive/master.zip">DVWA官网</a></p>
<p>下载DVWA环境后，将其解压并放置在phpStudy安装路径下的WWW子目录下</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/DVWA下载并解压.png" /></p>
<p>再将DVWA目录下的config子目录中的<code>config.inc.php.dist</code>文件的.dist后缀删除</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/修改config文件名.png" /></p>
<p>然后打开该文件并修改参数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$_DVWA = array();</span><br><span class="line">$_DVWA[ &#x27;db_server&#x27; ]   = &#x27;127.0.0.1&#x27;;</span><br><span class="line">$_DVWA[ &#x27;db_database&#x27; ] = &#x27;dvwa&#x27;;</span><br><span class="line">$_DVWA[ &#x27;db_user&#x27; ]     = &#x27;root&#x27;;</span><br><span class="line">$_DVWA[ &#x27;db_password&#x27; ] = &#x27;root&#x27;;</span><br><span class="line">$_DVWA[ &#x27;db_port&#x27;] = &#x27;3306&#x27;;</span><br></pre></td></tr></table></figure>
<p>然后打开游览器访问<code>127.0.0.1</code>，如果出现以下界面，则说明DVWA部署成功</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/127.0.0.1.png" /></p>
<p>然后访问<code>127.0.0.1/DVWA/setup.php</code>，将会看到以下界面</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/setup.png" /></p>
<p>点击最下方的创建数据库</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/创建数据库.png" /></p>
<p>创建完成后稍微等待一会将会转到登陆界面，也可以手动访问<code>127.0.0.1/DVWA/login.php</code></p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/登陆DVWA.png" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用户名：admin</span><br><span class="line">密码：password</span><br></pre></td></tr></table></figure>
<p>登陆成功之后就可以进入靶场了</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/靶场.png" /></p>
<p>到此DVWA的安装部署就成功了。</p>
]]></content>
      <categories>
        <category>网络安全</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
        <tag>漏洞防范</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo添加鼠标点击效果</title>
    <url>/2022/10/24/Hexo%E6%B7%BB%E5%8A%A0%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E6%95%88%E6%9E%9C/</url>
    <content><![CDATA[<h1 id="鼠标点击特效">鼠标点击特效</h1>
<p>从各个站点里搜罗了以下四个比较常用的鼠标点击特效：</p>
<ul>
<li><a
href="http://yearito.cn/posts/hexo-theme-beautify.html#鼠标点击特效-1">礼花特效</a></li>
<li><a
href="http://yearito.cn/posts/hexo-theme-beautify.html#鼠标点击特效-2">爆炸特效</a></li>
<li><a
href="http://yearito.cn/posts/hexo-theme-beautify.html#鼠标点击特效-3">浮出爱心</a></li>
<li><a
href="http://yearito.cn/posts/hexo-theme-beautify.html#鼠标点击特效-4">浮出文字</a></li>
</ul>
<span id="more"></span>
<h2 id="效果图">效果图</h2>
<p><a
href="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/cursor-text.gif"><img data-src="http://yearito-1256884783.image.myqcloud.com/hexo-theme-beautify/cursor-text.gif"
alt="img" /></a></p>
<h2 id="具体步骤">具体步骤</h2>
<ol type="1">
<li><p>点击下方按钮下载相应的脚本，并置于 themes 目录下：</p>
<p><a
href="https://script-1256884783.file.myqcloud.com/cursor/fireworks.js">礼花特效</a>
<a
href="https://script-1256884783.file.myqcloud.com/cursor/explosion.min.js">爆炸特效</a>
<a
href="https://script-1256884783.file.myqcloud.com/cursor/love.min.js">浮出爱心</a>
<a
href="https://script-1256884783.file.myqcloud.com/cursor/text.js">浮出文字</a></p>
<p>如果没有 cursor 这个目录，手动创建一下。</p></li>
<li><p>然后在主题自定义布局文件 themes_custom.swig 中添加如下内容：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">themes\next\layout\_custom\custom.<span class="property">swig</span>&#123;# 鼠标点击特效 #&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> theme.<span class="property">cursor_effect</span> == <span class="string">&quot;fireworks&quot;</span> %&#125;</span><br><span class="line">  &lt;script <span class="keyword">async</span> src=<span class="string">&quot;/js/cursor/fireworks.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% elseif theme.<span class="property">cursor_effect</span> == <span class="string">&quot;explosion&quot;</span> %&#125;</span><br><span class="line">  &lt;canvas <span class="keyword">class</span>=<span class="string">&quot;fireworks&quot;</span> style=<span class="string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;&lt;/canvas&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">&quot;/js/cursor/explosion.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&#123;% elseif theme.<span class="property">cursor_effect</span> == <span class="string">&quot;love&quot;</span> %&#125;</span><br><span class="line">  &lt;script <span class="keyword">async</span> src=<span class="string">&quot;/js/cursor/love.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% elseif theme.<span class="property">cursor_effect</span> == <span class="string">&quot;text&quot;</span> %&#125;</span><br><span class="line">  &lt;script <span class="keyword">async</span> src=<span class="string">&quot;/js/cursor/text.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>
<p>如果没有 _custom 文件夹或 custom.swig 文件，手动创建一下。</p></li>
<li><p>并且在主题布局文件 themes_layout.swig 中添加这一行（在 body
尾部）：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">themes\next\layout\_layout.swig      ...</span><br><span class="line">      &#123;% include &#x27;_third-party/exturl.swig&#x27; %&#125;</span><br><span class="line">      &#123;% include &#x27;_third-party/bookmark.swig&#x27; %&#125;</span><br><span class="line">      &#123;% include &#x27;_third-party/copy-code.swig&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">+     &#123;% include &#x27;_custom/custom.swig&#x27; %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li>
<li><p>在主题配置文件中添加以下代码：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">themes\next\_config.yml# mouse click effect: fireworks | explosion | love | text</span><br><span class="line">cursor_effect: fireworks</span><br></pre></td></tr></table></figure>
<p>这样即可在配置文件中一键快速切换鼠标点击特效。</p></li>
</ol>
<p>完成啦！重新生成部署一下博客吧。</p>
]]></content>
      <categories>
        <category>博客搭建</category>
        <category>博客美化</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
        <tag>Hexo</tag>
        <tag>Next</tag>
        <tag>博客美化</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown基本语法（一）</title>
    <url>/2022/04/04/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h1 id="markdown-基本语法一">Markdown 基本语法（一）</h1>
<p>Markdown是一种轻量级标记语言，排版语法简洁，让人们更多地关注内容本身而非排版。它使用易读易写的纯文本格式编写文档，可与HTML混编，可导出
HTML、PDF 以及本身的 .md
格式的文件。因简洁、高效、易读、易写，Markdown被大量使用，如Github、Wikipedia、简书等。</p>
<p>在线体验一下 <a
href="https://markdown.com.cn/editor/">Markdown在线编辑器</a>。</p>
<span id="more"></span>
<p>千万不要被「标记」、「语言」吓到，Markdown的语法十分简单，常用的标记符号不超过十个，用于日常写作记录绰绰有余，不到半小时就能完全掌握。</p>
<p>就是这十个不到的标记符号，却能让人<strong>优雅地沉浸式记录，专注内容而不是纠结排版</strong>，达到「心中无尘，码字入神」的境界。</p>
<p>让我们从 <a
href="https://markdown.com.cn/basic-syntax/headings.html">Markdown
标题语法</a>开始学习吧。</p>
<h1 id="markdown-标题语法">Markdown 标题语法</h1>
<p>要创建标题，请在单词或短语前面添加井号 (<code>#</code>)
。<code>#</code> 的数量代表了标题的级别。例如，添加三个 <code>#</code>
表示创建一个三级标题 (<code>&lt;h3&gt;</code>)
(例如：<code>### My Header</code>)。</p>
<table>
<thead>
<tr class="header">
<th>Markdown语法</th>
<th>HTML</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code># Heading level 1</code></td>
<td><code>&lt;h1&gt;Heading level 1&lt;/h1&gt;</code></td>
</tr>
<tr class="even">
<td><code>## Heading level 2</code></td>
<td><code>&lt;h2&gt;Heading level 2&lt;/h2&gt;</code></td>
</tr>
<tr class="odd">
<td><code>### Heading level 3</code></td>
<td><code>&lt;h3&gt;Heading level 3&lt;/h3&gt;</code></td>
</tr>
<tr class="even">
<td><code>#### Heading level 4</code></td>
<td><code>&lt;h4&gt;Heading level 4&lt;/h4&gt;</code></td>
</tr>
<tr class="odd">
<td><code>##### Heading level 5</code></td>
<td><code>&lt;h5&gt;Heading level 5&lt;/h5&gt;</code></td>
</tr>
<tr class="even">
<td><code>###### Heading level 6</code></td>
<td><code>&lt;h6&gt;Heading level 6&lt;/h6&gt;</code></td>
</tr>
</tbody>
</table>
<h2 id="可选语法">可选语法</h2>
<p>还可以在文本下方添加任意数量的 == 号来标识一级标题，或者 --
号来标识二级标题。</p>
<table>
<thead>
<tr class="header">
<th>Markdown语法</th>
<th>HTML</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>Heading level 1===============</code></td>
<td><code>&lt;h1&gt;Heading level 1&lt;/h1&gt;</code></td>
</tr>
<tr class="even">
<td><code>Heading level 2---------------</code></td>
<td><code>&lt;h2&gt;Heading level 2&lt;/h2&gt;</code></td>
</tr>
</tbody>
</table>
<h2 id="最佳实践">最佳实践</h2>
<p>不同的 Markdown 应用程序处理 <code>#</code>
和标题之间的空格方式并不一致。为了兼容考虑，请用一个空格在
<code>#</code> 和标题之间进行分隔。</p>
<table>
<thead>
<tr class="header">
<th>✅ Do this</th>
<th>❌ Don't do this</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code># Here's a Heading</code></td>
<td><code>#Here's a Heading</code></td>
</tr>
</tbody>
</table>
<h1 id="markdown-段落语法">Markdown 段落语法</h1>
<p>要创建段落，请使用空白行将一行或多行文本进行分隔。</p>
<table>
<colgroup>
<col style="width: 50%" />
<col style="width: 50%" />
</colgroup>
<thead>
<tr class="header">
<th>Markdown语法</th>
<th>HTML</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>I really like using Markdown.I think I'll use it to format all of my documents from now on.</code></td>
<td><code>&lt;p&gt;I really like using Markdown.&lt;/p&gt;&lt;p&gt;I think I'll use it to format all of my documents from now on.&lt;/p&gt;</code></td>
</tr>
</tbody>
</table>
<h2
id="段落paragraph用法的最佳实践">段落（Paragraph）用法的最佳实践</h2>
<p>不要用空格（spaces）或制表符（ tabs）缩进段落。</p>
<table>
<colgroup>
<col style="width: 50%" />
<col style="width: 50%" />
</colgroup>
<thead>
<tr class="header">
<th>✅ Do this</th>
<th>❌ Don't do this</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>Don't put tabs or spaces in front of your paragraphs.Keep lines left-aligned like this.</code></td>
<td><code>This can result in unexpected formatting problems. Don't add tabs or spaces in front of paragraphs.</code></td>
</tr>
</tbody>
</table>
<h1 id="markdown-换行语法">Markdown 换行语法</h1>
<p>在一行的末尾添加两个或多个空格，然后按回车键,即可创建一个换行(<code>&lt;br&gt;</code>)。</p>
<table>
<colgroup>
<col style="width: 32%" />
<col style="width: 35%" />
<col style="width: 32%" />
</colgroup>
<thead>
<tr class="header">
<th>Markdown语法</th>
<th>HTML</th>
<th></th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>This is the first line.  And this is the second line.</code></td>
<td><code>&lt;p&gt;This is the first line.&lt;br&gt;And this is the second line.&lt;/p&gt;</code></td>
<td>This is the first line.<br/>And this is the second line.</td>
</tr>
</tbody>
</table>
<h2 id="最佳实践-1">最佳实践</h2>
<p>几乎每个 Markdown 应用程序都支持两个或多个空格进行换行，称为
<code>结尾空格（trailing whitespace)</code>
的方式，但这是有争议的，因为很难在编辑器中直接看到空格，并且很多人在每个句子后面都会有意或无意地添加两个空格。由于这个原因，你可能要使用除结尾空格以外的其它方式来换行。幸运的是，几乎每个
Markdown 应用程序都支持另一种换行方式：HTML 的 <code>&lt;br&gt;</code>
标签。</p>
<p>为了兼容性，请在行尾添加“结尾空格”或 HTML 的 <code>&lt;br&gt;</code>
标签来实现换行。</p>
<p>还有两种其他方式我并不推荐使用。CommonMark
和其它几种轻量级标记语言支持在行尾添加反斜杠 (<code>\</code>)
的方式实现换行，但是并非所有 Markdown
应用程序都支持此种方式，因此从兼容性的角度来看，不推荐使用。并且至少有两种轻量级标记语言支持无须在行尾添加任何内容，只须键入回车键（<code>return</code>）即可实现换行。</p>
<table>
<colgroup>
<col style="width: 50%" />
<col style="width: 50%" />
</colgroup>
<thead>
<tr class="header">
<th>✅ Do this</th>
<th>❌ Don't do this</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>First line with two spaces after.  And the next line.First line with the HTML tag after.&lt;br&gt;And the next line.</code></td>
<td><code>First line with a backslash after.\And the next line.First line with nothing after.And the next line.</code></td>
</tr>
</tbody>
</table>
<h1 id="markdown-强调语法">Markdown 强调语法</h1>
<p>通过将文本设置为粗体或斜体来强调其重要性。</p>
<h2 id="粗体bold">粗体（Bold）</h2>
<p>要加粗文本，请在单词或短语的前后各添加两个星号（asterisks）或下划线（underscores）。如需加粗一个单词或短语的中间部分用以表示强调的话，请在要加粗部分的两侧各添加两个星号（asterisks）。</p>
<table>
<colgroup>
<col style="width: 29%" />
<col style="width: 43%" />
<col style="width: 27%" />
</colgroup>
<thead>
<tr class="header">
<th>Markdown语法</th>
<th>HTML</th>
<th>预览效果</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>I just love **bold text**.</code></td>
<td><code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td>
<td>I just love <strong>bold text</strong>.</td>
</tr>
<tr class="even">
<td><code>I just love __bold text__.</code></td>
<td><code>I just love &lt;strong&gt;bold text&lt;/strong&gt;.</code></td>
<td>I just love <strong>bold text</strong>.</td>
</tr>
<tr class="odd">
<td><code>Love**is**bold</code></td>
<td><code>Love&lt;strong&gt;is&lt;/strong&gt;bold</code></td>
<td>Love<strong>is</strong>bold</td>
</tr>
</tbody>
</table>
<h3 id="粗体bold用法最佳实践">粗体（Bold）用法最佳实践</h3>
<p>Markdown
应用程序在如何处理单词或短语中间的下划线上并不一致。为兼容考虑，在单词或短语中间部分加粗的话，请使用星号（asterisks）。</p>
<table>
<thead>
<tr class="header">
<th>✅ Do this</th>
<th>❌ Don't do this</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>Love**is**bold</code></td>
<td><code>Love__is__bold</code></td>
</tr>
</tbody>
</table>
<h2 id="斜体italic">斜体（Italic）</h2>
<p>要用斜体显示文本，请在单词或短语前后添加一个星号（asterisk）或下划线（underscore）。要斜体突出单词的中间部分，请在字母前后各添加一个星号，中间不要带空格。</p>
<table>
<colgroup>
<col style="width: 31%" />
<col style="width: 37%" />
<col style="width: 30%" />
</colgroup>
<thead>
<tr class="header">
<th>Markdown语法</th>
<th>HTML</th>
<th>预览效果</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>Italicized text is the *cat's meow*.</code></td>
<td><code>Italicized text is the &lt;em&gt;cat's meow&lt;/em&gt;.</code></td>
<td>Italicized text is the <em>cat’s meow</em>.</td>
</tr>
<tr class="even">
<td><code>Italicized text is the _cat's meow_.</code></td>
<td><code>Italicized text is the &lt;em&gt;cat's meow&lt;/em&gt;.</code></td>
<td>Italicized text is the <em>cat’s meow</em>.</td>
</tr>
<tr class="odd">
<td><code>A*cat*meow</code></td>
<td><code>A&lt;em&gt;cat&lt;/em&gt;meow</code></td>
<td>A<em>cat</em>meow</td>
</tr>
</tbody>
</table>
<h3 id="斜体italic用法的最佳实践">斜体（Italic）用法的最佳实践</h3>
<p>要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。</p>
<table>
<thead>
<tr class="header">
<th>✅ Do this</th>
<th>❌ Don't do this</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>A*cat*meow</code></td>
<td><code>A_cat_meow</code></td>
</tr>
</tbody>
</table>
<h2 id="粗体bold和斜体italic">粗体（Bold）和斜体（Italic）</h2>
<p>要同时用粗体和斜体突出显示文本，请在单词或短语的前后各添加三个星号或下划线。要加粗并用斜体显示单词或短语的中间部分，请在要突出显示的部分前后各添加三个星号，中间不要带空格。</p>
<table>
<colgroup>
<col style="width: 29%" />
<col style="width: 42%" />
<col style="width: 28%" />
</colgroup>
<thead>
<tr class="header">
<th>Markdown语法</th>
<th>HTML</th>
<th>预览效果</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>This text is ***really important***.</code></td>
<td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td>
<td>This text is *<strong>really important*</strong>.</td>
</tr>
<tr class="even">
<td><code>This text is ___really important___.</code></td>
<td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td>
<td>This text is *<strong>really important*</strong>.</td>
</tr>
<tr class="odd">
<td><code>This text is __*really important*__.</code></td>
<td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td>
<td>This text is *<strong>really important*</strong>.</td>
</tr>
<tr class="even">
<td><code>This text is **_really important_**.</code></td>
<td><code>This text is &lt;strong&gt;&lt;em&gt;really important&lt;/em&gt;&lt;/strong&gt;.</code></td>
<td>This text is *<strong>really important*</strong>.</td>
</tr>
<tr class="odd">
<td><code>This is really***very***important text.</code></td>
<td><code>This is really&lt;strong&gt;&lt;em&gt;very&lt;/em&gt;&lt;/strong&gt;important text.</code></td>
<td>This is really*<strong>very*</strong>important text.</td>
</tr>
</tbody>
</table>
<h3
id="粗体bold和斜体italic用法的最佳实践">粗体（Bold）和斜体（Italic）用法的最佳实践</h3>
<p>Markdown
应用程序在处理单词或短语中间添加的下划线上并不一致。为了实现兼容性，请使用星号将单词或短语的中间部分加粗并以斜体显示，以示重要。</p>
<table>
<colgroup>
<col style="width: 50%" />
<col style="width: 50%" />
</colgroup>
<thead>
<tr class="header">
<th>✅ Do this</th>
<th>❌ Don't do this</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>This is really***very***important text.</code></td>
<td><code>This is really___very___important text.</code></td>
</tr>
</tbody>
</table>
<h1 id="markdown-引用语法">Markdown 引用语法</h1>
<p>要创建块引用，请在段落前添加一个 <code>&gt;</code> 符号。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br></pre></td></tr></table></figure>
<p>渲染效果如下所示：</p>
<blockquote>
<p>Dorothy followed her through many of the beautiful rooms in her
castle.</p>
</blockquote>
<h2 id="多个段落的块引用">多个段落的块引用</h2>
<p>块引用可以包含多个段落。为段落之间的空白行添加一个 <code>&gt;</code>
符号。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br><span class="line">&gt;</span><br><span class="line">&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</span><br></pre></td></tr></table></figure>
<p>渲染效果如下：</p>
<blockquote>
<p>Dorothy followed her through many of the beautiful rooms in her
castle.</p>
<p>The Witch bade her clean the pots and kettles and sweep the floor and
keep the fire fed with wood.</p>
</blockquote>
<h2 id="嵌套块引用">嵌套块引用</h2>
<p>块引用可以嵌套。在要嵌套的段落前添加一个 <code>&gt;&gt;</code>
符号。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&gt; Dorothy followed her through many of the beautiful rooms in her castle.</span><br><span class="line">&gt;</span><br><span class="line">&gt;&gt; The Witch bade her clean the pots and kettles and sweep the floor and keep the fire fed with wood.</span><br></pre></td></tr></table></figure>
<p>渲染效果如下：</p>
<blockquote>
<p>Dorothy followed her through many of the beautiful rooms in her
castle.</p>
<blockquote>
<p>The Witch bade her clean the pots and kettles and sweep the floor and
keep the fire fed with wood.</p>
</blockquote>
</blockquote>
<h2 id="带有其它元素的块引用">带有其它元素的块引用</h2>
<p>块引用可以包含其他 Markdown
格式的元素。并非所有元素都可以使用，你需要进行实验以查看哪些元素有效。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&gt; #### The quarterly results look great!</span><br><span class="line">&gt;</span><br><span class="line">&gt; - Revenue was off the chart.</span><br><span class="line">&gt; - Profits were higher than ever.</span><br><span class="line">&gt;</span><br><span class="line">&gt;  *Everything* is going according to **plan**.</span><br></pre></td></tr></table></figure>
<p>渲染效果如下：</p>
<blockquote>
<h4 id="the-quarterly-results-look-great">The quarterly results look
great!</h4>
<ul>
<li>Revenue was off the chart.</li>
<li>Profits were higher than ever.</li>
</ul>
<p><em>Everything</em> is going according to <strong>plan</strong>.</p>
</blockquote>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Markdown基本语法</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown基本语法（二）</title>
    <url>/2022/04/05/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h1 id="markdown-代码语法">Markdown 代码语法</h1>
<p>要将单词或短语表示为代码，请将其包裹在反引号 (```) 中。</p>
<table>
<colgroup>
<col style="width: 30%" />
<col style="width: 40%" />
<col style="width: 29%" />
</colgroup>
<thead>
<tr class="header">
<th>Markdown语法</th>
<th>HTML</th>
<th>预览效果</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>At the command prompt, type</code>nano<code>.</code></td>
<td><code>At the command prompt, type &lt;code&gt;nano&lt;/code&gt;.</code></td>
<td>At the command prompt, type <code>nano</code>.</td>
</tr>
</tbody>
</table>
<span id="more"></span>
<h2 id="转义反引号">转义反引号</h2>
<p>如果你要表示为代码的单词或短语中包含一个或多个反引号，则可以通过将单词或短语包裹在双反引号(````)中。</p>
<table>
<colgroup>
<col style="width: 31%" />
<col style="width: 39%" />
<col style="width: 28%" />
</colgroup>
<thead>
<tr class="header">
<th>Markdown语法</th>
<th>HTML</th>
<th>预览效果</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>Use `code` in your Markdown file.</code></td>
<td><code>&lt;code&gt;Use</code>code<code>in your Markdown file.&lt;/code&gt;</code></td>
<td><code>Use</code>code<code>in your Markdown file.</code></td>
</tr>
</tbody>
</table>
<h2 id="代码块">代码块</h2>
<p>要创建代码块，请将代码块的每一行缩进至少四个空格或一个制表符。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>渲染效果如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p><strong>Note:</strong>
要创建不用缩进的代码块，请使用围栏式代码块（fenced code blocks)</p>
<h1 id="markdown-分隔线语法">Markdown 分隔线语法</h1>
<p>要创建分隔线，请在单独一行上使用三个或多个星号
(<code>***</code>)、破折号 (<code>---</code>) 或下划线
(<code>___</code>) ，并且不能包含其他内容。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">***</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">_________________</span><br></pre></td></tr></table></figure>
<p>以上三个分隔线的渲染效果看起来都一样：</p>
<hr />
<h2 id="分隔线horizontal-rule用法最佳实践">分隔线（Horizontal
Rule）用法最佳实践</h2>
<p>为了兼容性，请在分隔线的前后均添加空白行。</p>
<table>
<colgroup>
<col style="width: 50%" />
<col style="width: 50%" />
</colgroup>
<thead>
<tr class="header">
<th>✅ Do this</th>
<th>❌ Don't do this</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>Try to put a blank line before...---...and after a horizontal rule.</code></td>
<td><code>Without blank lines, this would be a heading.---Don't do this!</code></td>
</tr>
</tbody>
</table>
<h1 id="markdown-链接语法">Markdown 链接语法</h1>
<p>链接文本放在中括号内，链接地址放在后面的括号中，链接title可选。</p>
<p>超链接Markdown语法代码：<code>[超链接显示名](超链接地址 "超链接title")</code></p>
<p>对应的HTML代码：<code>&lt;a href="超链接地址" title="超链接title"&gt;超链接显示名&lt;/a&gt;</code></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">这是一个链接 [Markdown语法](https://markdown.com.cn)。</span><br></pre></td></tr></table></figure>
<p>渲染效果如下：</p>
<p>这是一个链接 <a
href="https://markdown.com.cn/">Markdown语法</a>。</p>
<h2 id="给链接增加-title">给链接增加 Title</h2>
<p>链接title是当鼠标悬停在链接上时会出现的文字，这个title是可选的，它放在圆括号中链接地址后面，跟链接地址之间以空格分隔。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">这是一个链接 [Markdown语法](https://markdown.com.cn &quot;最好的markdown教程&quot;)。</span><br></pre></td></tr></table></figure>
<p>渲染效果如下：</p>
<p>这是一个链接 <a
href="https://markdown.com.cn/">Markdown语法</a>。</p>
<h2 id="网址和email地址">网址和Email地址</h2>
<p>使用尖括号可以很方便地把URL或者email地址变成可点击的链接。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">&lt;https://markdown.com.cn&gt;</span><br><span class="line">&lt;fake@example.com&gt;</span><br></pre></td></tr></table></figure>
<p>渲染效果如下：</p>
<p><a href="https://markdown.com.cn/">https://markdown.com.cn</a> <a
href="mailto:fake@example.com">fake@example.com</a></p>
<h2 id="带格式化的链接">带格式化的链接</h2>
<p>强调链接, 在链接语法前后增加星号。
要将链接表示为代码，请在方括号中添加反引号。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">I love supporting the **[EFF](https://eff.org)**.</span><br><span class="line">This is the *[Markdown Guide](https://www.markdownguide.org)*.</span><br><span class="line">See the section on [`code`](#code).</span><br></pre></td></tr></table></figure>
<p>渲染效果如下：</p>
<p>I love supporting the <strong><a
href="https://eff.org/">EFF</a></strong>. This is the <em><a
href="https://www.markdownguide.org/">Markdown Guide</a></em>. See the
section on <a
href="https://markdown.com.cn/basic-syntax/links.html#code"><code>code</code></a>.</p>
<h2 id="引用类型链接">引用类型链接</h2>
<p>引用样式链接是一种特殊的链接，它使URL在Markdown中更易于显示和阅读。参考样式链接分为两部分：与文本保持内联的部分以及存储在文件中其他位置的部分，以使文本易于阅读。</p>
<h3 id="链接的第一部分格式">链接的第一部分格式</h3>
<p>引用类型的链接的第一部分使用两组括号进行格式设置。第一组方括号包围应显示为链接的文本。第二组括号显示了一个标签，该标签用于指向您存储在文档其他位置的链接。</p>
<p>尽管不是必需的，可以在第一组和第二组括号之间包含一个空格。第二组括号中的标签不区分大小写，可以包含字母，数字，空格或标点符号。</p>
<p>以下示例格式对于链接的第一部分效果相同：</p>
<ul>
<li><code>[hobbit-hole][1]</code></li>
<li><code>[hobbit-hole] [1]</code></li>
</ul>
<h3 id="链接的第二部分格式">链接的第二部分格式</h3>
<p>引用类型链接的第二部分使用以下属性设置格式：</p>
<ol type="1">
<li>放在括号中的标签，其后紧跟一个冒号和至少一个空格（例如<code>[label]:</code>）。</li>
<li>链接的URL，可以选择将其括在尖括号中。</li>
<li>链接的可选标题，可以将其括在双引号，单引号或括号中。</li>
</ol>
<p>以下示例格式对于链接的第二部分效果相同：</p>
<ul>
<li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle</code></li>
<li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle "Hobbit lifestyles"</code></li>
<li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle 'Hobbit lifestyles'</code></li>
<li><code>[1]: https://en.wikipedia.org/wiki/Hobbit#Lifestyle (Hobbit lifestyles)</code></li>
<li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; "Hobbit lifestyles"</code></li>
<li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; 'Hobbit lifestyles'</code></li>
<li><code>[1]: &lt;https://en.wikipedia.org/wiki/Hobbit#Lifestyle&gt; (Hobbit lifestyles)</code></li>
</ul>
<p>可以将链接的第二部分放在Markdown文档中的任何位置。有些人将它们放在出现的段落之后，有些人则将它们放在文档的末尾（例如尾注或脚注）。</p>
<h3 id="链接最佳实践">链接最佳实践</h3>
<p>不同的 Markdown
应用程序处理URL中间的空格方式不一样。为了兼容性，请尽量使用%20代替空格。</p>
<table>
<colgroup>
<col style="width: 52%" />
<col style="width: 47%" />
</colgroup>
<thead>
<tr class="header">
<th>✅ Do this</th>
<th>❌ Don't do this</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td><code>[link](https://www.example.com/my%20great%20page)</code></td>
<td><code>[link](https://www.example.com/my great page)</code></td>
</tr>
</tbody>
</table>
<h1 id="markdown-图片语法">Markdown 图片语法</h1>
<p>要添加图像，请使用感叹号 (<code>!</code>),
然后在方括号增加替代文本，图片链接放在圆括号里，括号里的链接后可以增加一个可选的图片标题文本。</p>
<p>插入图片Markdown语法代码：<code>![图片alt](图片链接 "图片title")</code>。</p>
<p>对应的HTML代码：<code>&lt;img src="图片链接" alt="图片alt" title="图片title"&gt;</code></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">![这是图片](/assets/img/philly-magic-garden.jpg &quot;Magic Gardens&quot;)</span><br></pre></td></tr></table></figure>
<p>渲染效果如下：</p>
<figure>
<img data-src="https://markdown.com.cn/assets/img/philly-magic-garden.9c0b4415.jpg"
alt="这是图片" />
<figcaption aria-hidden="true">这是图片</figcaption>
</figure>
<h2 id="链接图片">链接图片</h2>
<p>给图片增加链接，请将图像的Markdown
括在方括号中，然后将链接添加在圆括号中。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[![沙漠中的岩石图片](/assets/img/shiprock.jpg &quot;Shiprock&quot;)](https://markdown.com.cn)</span><br></pre></td></tr></table></figure>
<p>渲染效果如下：</p>
<p><a href="https://markdown.com.cn/"><img data-src="https://markdown.com.cn/assets/img/shiprock.c3b9a023.jpg"
alt="沙漠中的岩石图片" /></a></p>
<h1 id="markdown-转义字符语法">Markdown 转义字符语法</h1>
<p>要显示原本用于格式化 Markdown 文档的字符，请在字符前面添加反斜杠字符
 。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">\* Without the backslash, this would be a bullet in an unordered list.</span><br></pre></td></tr></table></figure>
<p>渲染效果如下：</p>
<p>* Without the backslash, this would be a bullet in an unordered
list.</p>
<h2 id="可做转义的字符">可做转义的字符</h2>
<p>以下列出的字符都可以通过使用反斜杠字符从而达到转义目的。</p>
<table>
<colgroup>
<col style="width: 13%" />
<col style="width: 86%" />
</colgroup>
<thead>
<tr class="header">
<th>Character</th>
<th>Name</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>\</td>
<td>backslash</td>
</tr>
<tr class="even">
<td>`</td>
<td>backtick (see also <a
href="https://markdown.com.cn/basic-syntax/escaping-characters.html#escaping-backticks">escaping
backticks in code</a>)</td>
</tr>
<tr class="odd">
<td>*</td>
<td>asterisk</td>
</tr>
<tr class="even">
<td>_</td>
<td>underscore</td>
</tr>
<tr class="odd">
<td>{ }</td>
<td>curly braces</td>
</tr>
<tr class="even">
<td>[ ]</td>
<td>brackets</td>
</tr>
<tr class="odd">
<td>( )</td>
<td>parentheses</td>
</tr>
<tr class="even">
<td>#</td>
<td>pound sign</td>
</tr>
<tr class="odd">
<td>+</td>
<td>plus sign</td>
</tr>
<tr class="even">
<td>-</td>
<td>minus sign (hyphen)</td>
</tr>
<tr class="odd">
<td>.</td>
<td>dot</td>
</tr>
<tr class="even">
<td>!</td>
<td>exclamation mark</td>
</tr>
<tr class="odd">
<td>|</td>
<td>pipe (see also <a
href="https://markdown.com.cn/extended-syntax/escaping-pipe-characters-in-tables.html">escaping
pipe in tables</a>)</td>
</tr>
</tbody>
</table>
<h2 id="特殊字符自动转义">特殊字符自动转义</h2>
<p>在 HTML 文件中，有两个字符需要特殊处理： <code>&lt;</code> 和
<code>&amp;</code> 。 <code>&lt;</code>
符号用于起始标签，<code>&amp;</code> 符号则用于标记 HTML
实体，如果你只是想要使用这些符号，你必须要使用实体的形式，像是
<code>&lt;</code> 和 <code>&amp;</code>。</p>
<p><code>&amp;</code>
符号其实很容易让写作网页文件的人感到困扰，如果你要打「AT&amp;T」
，你必须要写成「<code>AT&amp;T</code>」 ，还得转换网址内的
<code>&amp;</code> 符号，如果你要链接到：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;q=larry+bird</span><br></pre></td></tr></table></figure>
<p>你必须要把网址转成：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://images.google.com/images?num=30&amp;amp;q=larry+bird</span><br></pre></td></tr></table></figure>
<p>才能放到链接标签的 <code>href</code>
属性里。不用说也知道这很容易忘记，这也可能是 HTML
标准检查所检查到的错误中，数量最多的。</p>
<p>Markdown 允许你直接使用这些符号，它帮你自动转义字符。如果你使用
<code>&amp;</code> 符号的作为 HTML
实体的一部分，那么它不会被转换，而在其它情况下，它则会被转换成
<code>&amp;</code>。所以你如果要在文件中插入一个著作权的符号，你可以这样写：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&amp;copy;</span><br></pre></td></tr></table></figure>
<p>Markdown 将不会对这段文字做修改，但是如果你这样写：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AT&amp;T</span><br></pre></td></tr></table></figure>
<p>Markdown 就会将它转为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AT&amp;amp;T</span><br></pre></td></tr></table></figure>
<p>类似的状况也会发生在 <code>&lt;</code> 符号上，因为 Markdown 支持 <a
href="https://markdown.com.cn/basic-syntax/#内联-html">行内 HTML</a>
，如果你使用 <code>&lt;</code> 符号作为 HTML 标签的分隔符，那 Markdown
也不会对它做任何转换，但是如果你是写：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 &lt; 5</span><br></pre></td></tr></table></figure>
<p>Markdown 将会把它转换为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4 &amp;lt; 5</span><br></pre></td></tr></table></figure>
<p>需要特别注意的是，在 Markdown 的块级元素和内联元素中，
<code>&lt;</code> 和 <code>&amp;</code> 两个符号都会被自动转换成 HTML
实体，这项特性让你可以很容易地用 Markdown 写 HTML。（在 HTML
语法中，你要手动把所有的 <code>&lt;</code> 和 <code>&amp;</code>
都转换为 HTML 实体。）</p>
<h1 id="markdown-内嵌-html-标签">Markdown 内嵌 HTML 标签</h1>
<p>对于 Markdown 涵盖范围之外的标签，都可以直接在文件里面用 HTML
本身。如需使用 HTML，不需要额外标注这是 HTML 或是 Markdown，只需 HTML
标签添加到 Markdown 文本中即可。</p>
<h2 id="行级內联标签">行级內联标签</h2>
<p>HTML 的行级內联标签如
<code>&lt;span&gt;</code>、<code>&lt;cite&gt;</code>、<code>&lt;del&gt;</code>
不受限制，可以在 Markdown
的段落、列表或是标题里任意使用。依照个人习惯，甚至可以不用 Markdown
格式，而采用 HTML 标签来格式化。例如：如果比较喜欢 HTML 的
<code>&lt;a&gt;</code> 或 <code>&lt;img&gt;</code>
标签，可以直接使用这些标签，而不用 Markdown
提供的链接或是图片语法。当你需要更改元素的属性时（例如为文本指定颜色或更改图像的宽度），使用
HTML 标签更方便些。</p>
<p>HTML 行级內联标签和区块标签不同，在內联标签的范围内， Markdown
的语法是可以解析的。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">This **word** is bold. This &lt;em&gt;word&lt;/em&gt; is italic.</span><br></pre></td></tr></table></figure>
<p>渲染效果如下:</p>
<p>This <strong>word</strong> is bold. This <em>word</em> is italic.</p>
<h2 id="区块标签">区块标签</h2>
<p>区块元素──比如
<code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>、<code>&lt;p&gt;</code>
等标签，必须在前后加上空行，以便于内容区分。而且这些元素的开始与结尾标签，不可以用
tab 或是空白来缩进。Markdown
会自动识别这区块元素，避免在区块标签前后加上没有必要的
<code>&lt;p&gt;</code> 标签。</p>
<p>例如，在 Markdown 文件里加上一段 HTML 表格：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">This is a regular paragraph.</span><br><span class="line"></span><br><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr&gt;</span><br><span class="line">        &lt;td&gt;Foo&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line"></span><br><span class="line">This is another regular paragraph.</span><br></pre></td></tr></table></figure>
<p>请注意，Markdown 语法在 HTML
区块标签中将不会被进行处理。例如，你无法在 HTML 区块内使用 Markdown
形式的<code>*强调*</code>。</p>
<h3 id="html-用法最佳实践">HTML 用法最佳实践</h3>
<p>出于安全原因，并非所有 Markdown 应用程序都支持在 Markdown 文档中添加
HTML。如有疑问，请查看相应 Markdown 应用程序的手册。某些应用程序只支持
HTML 标签的子集。</p>
<p>对于 HTML 的块级元素
<code>&lt;div&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;pre&gt;</code>
和 <code>&lt;p&gt;</code>，请在其前后使用空行（blank
lines）与其它内容进行分隔。尽量不要使用制表符（tabs）或空格（spaces）对
HTML 标签做缩进，否则将影响格式。</p>
<p>在 HTML 块级标签内不能使用 Markdown 语法。例如
<code>&lt;p&gt;italic and **bold**&lt;/p&gt;</code> 将不起作用。</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Markdown基本语法</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows与网络基础-05-安装eNSP软件环境</title>
    <url>/2022/10/18/Windows%E4%B8%8E%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80-05-%E5%AE%89%E8%A3%85eNSP%E8%BD%AF%E4%BB%B6%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<h1
id="windows与网络基础-05-安装ensp软件环境">Windows与网络基础-05-安装eNSP软件环境</h1>
<h2 id="准备工作">准备工作</h2>
<ol type="1">
<li>主机系统：Windows 10 专业版 21H2</li>
<li>虚拟机版本：VMware Workstation 16 Pro</li>
<li>VirtualBox版本：VirtualBox-5.2.44-139111-Win</li>
<li>eNSP版本：eNSP-1.3.00.100</li>
</ol>
<span id="more"></span>
<h2 id="在windows下安装ensp的步骤">在Windows下安装eNSP的步骤</h2>
<p>在安装<code>eNSP</code>之前首先要安装<code>VirtualBox</code></p>
<p>安装原因：<strong>华为模拟器里面所有的设备全部都是采用虚拟机的方式存在</strong></p>
<h3 id="virtualbox安装">VirtualBox安装</h3>
<p>安装过程比较简单，这里我们点击<code>下一步</code></p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/VirtualBox安装1.png" style="zoom:50%;" /></p>
<p>在这里选择要在其中安装<code>VirtualBox</code>的目录，将路径改成自己想要存放的目录，然后点击<code>下一步</code></p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/VirtualBox安装2.png" style="zoom:50%;" /></p>
<p>这里我们勾选所需选项，之后点击<code>下一步</code></p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/VirtualBox安装3.png" style="zoom:50%;" /></p>
<p>此处出现警告，不用惊慌，点击是继续安装</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/VirtualBox安装4.png" style="zoom:50%;" /></p>
<p>这里点击安装即可</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/VirtualBox安装5.png" style="zoom:50%;" /></p>
<p>然后等待安装完成</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/VirtualBox安装6.png" style="zoom:50%;" /></p>
<p>在安装过程中可能出现以下情况，这里选择安装</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/VirtualBox安装7.png" style="zoom:50%;" /></p>
<p>然后我们取消勾选运行<code>VirtualBox</code>的选项，点击完成，到此<code>VirtualBox</code>的安装已经完成了</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/VirtualBox安装8.png" style="zoom:50%;" /></p>
<h3 id="ensp安装">eNSP安装</h3>
<p>在<code>VirtualBox</code>安装完成之后，我们开始进行<code>eNSP</code>的安装</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/eNSP安装1.png" style="zoom:50%;" />
<img data-src="https://baoxinwen.github.io/cloudimg/blogimg/eNSP安装2.png" style="zoom:50%;" />
<img data-src="https://baoxinwen.github.io/cloudimg/blogimg/eNSP安装3.png" style="zoom:50%;" />
<img data-src="https://baoxinwen.github.io/cloudimg/blogimg/eNSP安装4.png" style="zoom:50%;" />
<img data-src="https://baoxinwen.github.io/cloudimg/blogimg/eNSP安装5.png" style="zoom:50%;" />
<img data-src="https://baoxinwen.github.io/cloudimg/blogimg/eNSP安装6.png" style="zoom:50%;" />
<img data-src="https://baoxinwen.github.io/cloudimg/blogimg/eNSP安装7.png" style="zoom:50%;" />
<img data-src="https://baoxinwen.github.io/cloudimg/blogimg/eNSP安装8.png" style="zoom:50%;" />
<img data-src="https://baoxinwen.github.io/cloudimg/blogimg/eNSP安装9.png" style="zoom:50%;" />
<img data-src="https://baoxinwen.github.io/cloudimg/blogimg/eNSP安装10.png" style="zoom:50%;" />
<img data-src="https://baoxinwen.github.io/cloudimg/blogimg/eNSP安装11.png" style="zoom:50%;" /></p>
]]></content>
      <categories>
        <category>网络安全</category>
        <category>Windows与网络基础</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows与网络基础-06-虚拟机的基本操作</title>
    <url>/2022/10/18/Windows%E4%B8%8E%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80-06-%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h1
id="windows与网络基础-06-虚拟机的基本操作">Windows与网络基础-06-虚拟机的基本操作</h1>
<h2 id="虚拟机菜单栏">虚拟机菜单栏</h2>
<p>虚拟机的菜单栏一共有6个选项卡，分别是</p>
<ul>
<li>文件</li>
<li>编辑</li>
<li>查看</li>
<li>虚拟机</li>
<li>选项卡</li>
<li>帮助</li>
</ul>
<span id="more"></span>
<p>虚拟机的工具栏一共在帮助后面，从左到右依次是</p>
<ul>
<li>启动此客户机操作系统</li>
<li>将Ctrl+AIt+Del发送到该虚拟机</li>
<li>拍摄此虚拟机的快照</li>
<li>将此虚拟机恢复到其父快照</li>
<li>管理此虚拟机的快照</li>
<li>显示或隐藏库</li>
<li>显示或隐藏缩略图栏</li>
<li>进入全屏模式</li>
<li>进入Unity模式</li>
<li>显示或隐藏控制台视图</li>
<li>自由拉伸</li>
</ul>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/VMware标题栏.png" /></p>
<h3 id="文件">文件</h3>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/VMware标题栏-文件.png" style="zoom:67%;" /></p>
<h3 id="编辑">编辑</h3>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/VMware标题栏-编辑.png" style="zoom:67%;" /></p>
<h3 id="查看">查看</h3>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/VMware标题栏-查看.png" style="zoom: 67%;" /></p>
<h3 id="虚拟机">虚拟机</h3>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/VMware标题栏-虚拟机.png" style="zoom:67%;" /></p>
<h3 id="选项卡">选项卡</h3>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/VMware标题栏-选项卡.png" style="zoom:67%;" /></p>
<h3 id="帮助">帮助</h3>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/VMware标题栏-帮助.png" style="zoom:67%;" /></p>
<p>具体VMware Workstation的使用，参照<a
href="https://docs.vmware.com/cn/VMware-Workstation-Pro/16.0/com.vmware.ws.using.doc/GUID-0EE752F8-C159-487A-9159-FE1F646EE4CA.html">VMware
Workstation Pro的官方使用手册</a>。</p>
]]></content>
      <categories>
        <category>网络安全</category>
        <category>Windows与网络基础</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows与网络基础-07-Windows基本命令-目录文件操作</title>
    <url>/2022/10/20/Windows%E4%B8%8E%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80-07-Windows%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4-%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p><strong>目标：</strong></p>
<p>掌握windwos系统文件及目录操作的一些命令</p>
<p>掌握windwos网络相关的命令</p>
<p>Window输入命令：使用命令提示符对话框<strong>cmd</strong></p>
<span id="more"></span>
<h1 id="命令行语法项">命令行语法项</h1>
<p>下表描述用于指示命令行语法的表示法。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: left;">表示法</th>
<th style="text-align: left;">说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">不含方括号或大括号的文本</td>
<td style="text-align: left;">必须按所显示键入的项。</td>
</tr>
<tr class="even">
<td
style="text-align: left;"><code>&lt;Text inside angle brackets&gt;</code></td>
<td style="text-align: left;">必须为其提供值的占位符。</td>
</tr>
<tr class="odd">
<td
style="text-align: left;"><code>[Text inside square brackets]</code></td>
<td style="text-align: left;">可选项。</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>&#123;Text inside braces&#125;</code></td>
<td style="text-align: left;">一组必需的项。 你必须选择一个。</td>
</tr>
<tr class="odd">
<td style="text-align: left;">竖线 <code>( \| )</code></td>
<td style="text-align: left;">互斥项的分隔符。 你必须选择一个。</td>
</tr>
<tr class="even">
<td style="text-align: left;">省略号 <code>(…)</code></td>
<td style="text-align: left;">可重复使用多次的项。</td>
</tr>
</tbody>
</table>
<h1 id="cd">CD</h1>
<ul>
<li>语法</li>
<li>注解</li>
<li>示例</li>
<li>其他参考</li>
</ul>
<blockquote>
<p>适用范围：Windows Server 2022、Windows Server 2019、Windows Server
2016、Windows Server 2012 R2、Windows Server 2012</p>
</blockquote>
<p>显示当前目录的名称，或更改当前目录。 如果仅与驱动器号 (，
<code>cd C:</code>) ， <code>cd C:</code>
将显示指定驱动器中的当前目录的名称。 如果不带参数使用，
<strong>cd</strong> 将显示当前驱动器和目录。</p>
<blockquote>
<p>备注：此命令与 chdir 命令相同。</p>
</blockquote>
<h2 id="语法">语法</h2>
<p>复制</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> [/<span class="type">d</span>] [&lt;<span class="type">drive</span>&gt;:][&lt;<span class="type">path</span>&gt;]</span><br><span class="line"><span class="built_in">cd</span> [<span class="type">..</span>]</span><br><span class="line"><span class="built_in">chdir</span> [/<span class="type">d</span>] [&lt;<span class="type">drive</span>&gt;:][&lt;<span class="type">path</span>&gt;]</span><br><span class="line"><span class="built_in">chdir</span> [<span class="type">..</span>]</span><br></pre></td></tr></table></figure>
<h3 id="参数">参数</h3>
<table>
<thead>
<tr class="header">
<th style="text-align: left;">参数</th>
<th style="text-align: left;">说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;">/d</td>
<td style="text-align: left;">更改驱动器的当前驱动器以及当前目录。</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>&lt;drive&gt;:</code></td>
<td style="text-align: left;">指定要显示或更改驱动器的
(（如果不同于当前驱动器) 。</td>
</tr>
<tr class="odd">
<td style="text-align: left;"><code>&lt;path&gt;</code></td>
<td style="text-align: left;">指定要显示或更改的目录的路径。</td>
</tr>
<tr class="even">
<td style="text-align: left;">[..]</td>
<td style="text-align: left;">指定要更改为父文件夹。</td>
</tr>
<tr class="odd">
<td style="text-align: left;">/?</td>
<td style="text-align: left;">在命令提示符下显示帮助。</td>
</tr>
</tbody>
</table>
<h2 id="注解">注解</h2>
<p>如果启用了命令扩展，则以下条件适用于 <strong>cd</strong> 命令：</p>
<ul>
<li><p>当前目录字符串将转换为使用与磁盘上的名称相同的大小写。 例如，
<code>cd c:\temp</code> 将当前目录设置为
C：（如果磁盘上是这种情况）。</p></li>
<li><p>空格不被视为分隔符，因此 <code>&lt;path&gt;</code>
可以包含不带引号的空格。 例如：</p>
<p>复制</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> username\programs\start menu</span><br></pre></td></tr></table></figure>
<p>相当于：</p>
<p>复制</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="string">&quot;username\programs\start menu&quot;</span></span><br></pre></td></tr></table></figure>
<p>如果禁用扩展，则引号是必需的。</p></li>
<li><p>若要禁用命令扩展，请键入：</p>
<p>复制</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">cmd /e:off</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="示例">示例</h2>
<p>若要返回到根目录，请返回驱动器的目录层次结构的顶部：</p>
<p>复制</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span>\</span><br></pre></td></tr></table></figure>
<p>更改驱动器上不同于你位于的驱动器上的默认目录：</p>
<p>复制</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> [&lt;<span class="type">drive</span>&gt;:[&lt;<span class="type">directory</span>&gt;]]</span><br></pre></td></tr></table></figure>
<p>若要验证对目录的更改，请键入：</p>
<p>复制</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> [&lt;<span class="type">drive</span>&gt;:]</span><br></pre></td></tr></table></figure>
<h1 id="dir">dir</h1>
<ul>
<li>语法</li>
<li>示例</li>
<li>其他参考</li>
</ul>
<p>显示目录的文件和子目录的列表。
如果未使用参数，此命令将显示磁盘的卷标签和序列号，然后是磁盘上的目录和文件列表，
(包括其名称和上次修改的日期和时间) 。
对于文件，此命令显示名称扩展名和大小（以字节为单位）。
此命令还显示列出的文件和目录总数、其累积大小以及磁盘上剩余的可用空间
(字节) 。</p>
<p><strong>dir</strong> 命令还可以使用不同的参数从 Windows
恢复控制台运行。 有关详细信息，请参阅<a
href="https://learn.microsoft.com/zh-cn/windows-hardware/manufacture/desktop/windows-recovery-environment--windows-re--technical-reference">Windows恢复环境
(WinRE)</a>。</p>
<h2 id="语法-1">语法</h2>
<p>复制</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> [&lt;<span class="type">drive</span>&gt;:][&lt;<span class="type">path</span>&gt;][&lt;<span class="type">filename</span>&gt;] [<span class="type">...</span>] [/<span class="type">p</span>] [/<span class="type">q</span>] [/<span class="type">w</span>] [/<span class="type">d</span>] [/<span class="type">a</span>[[:]&lt;<span class="type">attributes</span>&gt;]][/<span class="type">o</span>[[:]&lt;<span class="type">sortorder</span>&gt;]] [/<span class="type">t</span>[[:]&lt;<span class="type">timefield</span>&gt;]] [/<span class="type">s</span>] [/<span class="type">b</span>] [/<span class="type">l</span>] [/<span class="type">n</span>] [/<span class="type">x</span>] [/<span class="type">c</span>] [/<span class="number">4</span>] [/<span class="type">r</span>]</span><br></pre></td></tr></table></figure>
<h3 id="参数-1">参数</h3>
<table>
<colgroup>
<col style="width: 26%" />
<col style="width: 73%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">参数</th>
<th style="text-align: left;">说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td
style="text-align: left;"><code>[&lt;drive&gt;:][&lt;path&gt;]</code></td>
<td style="text-align: left;">指定要在其中查看列表的驱动器和目录。</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>[&lt;filename&gt;]</code></td>
<td
style="text-align: left;">指定要在其中查看列表的特定文件或文件组。</td>
</tr>
<tr class="odd">
<td style="text-align: left;">/p</td>
<td style="text-align: left;">一次显示一个列表的一个屏幕。
若要查看下一个屏幕，请按任意键。</td>
</tr>
<tr class="even">
<td style="text-align: left;">/q</td>
<td style="text-align: left;">显示文件所有权信息。</td>
</tr>
<tr class="odd">
<td style="text-align: left;">/W</td>
<td
style="text-align: left;">以宽格式显示列表，每行包含多达五个文件名或目录名称。</td>
</tr>
<tr class="even">
<td style="text-align: left;">/d</td>
<td style="text-align: left;">以 <strong>/w</strong>
相同的格式显示列表，但文件按列排序。</td>
</tr>
<tr class="odd">
<td
style="text-align: left;">/a[[：]<code>&lt;attributes&gt;</code>]</td>
<td style="text-align: left;">仅显示具有指定属性的目录和文件的名称。
如果不使用此参数，该命令将显示除隐藏文件和系统文件之外的所有文件的名称。
如果在未指定任何
<em>属性</em>的情况下使用此参数，该命令将显示所有文件的名称，包括隐藏文件和系统文件。
可能的 <em>属性值</em> 列表包括：<strong>d</strong> -
目录<strong>h</strong> - 隐藏文件<strong>s</strong> -
系统文件<strong>l</strong> - 重新分析点<strong>r</strong> -
只读文件<strong>a</strong> - 准备存档的文件<strong>i</strong> -
非内容索引文件可以使用这些值的任何组合，但不要使用空格分隔值。
（可选）可以使用冒号 (：) 分隔符，也可以使用连字符 (-)
作为前缀来表示“not”。 例如，使用 <strong>-s</strong>
属性不会显示系统文件。</td>
</tr>
<tr class="even">
<td
style="text-align: left;">/o[[：]<code>&lt;sortorder&gt;</code>]</td>
<td style="text-align: left;">根据 <em>sortorder</em>
对输出进行排序，它可以是以下值的任意组合：<strong>n</strong> -
按名称按字母顺序排列<strong>e</strong> -
按扩展名按字母顺序排列<strong>g</strong> -
首先对目录进行分组<strong>s</strong> - 按大小，最先小<strong>d</strong>
-
按日期/时间，最早<strong>-</strong>使用前缀反转排序顺序按列出这些值的顺序处理多个值。
不要使用空格分隔多个值，但可以选择使用冒号 (：) 。如果未指定
<em>sortorder</em> ， <strong>dir /o</strong>
按字母顺序列出目录，后跟按字母顺序排序的文件。</td>
</tr>
<tr class="odd">
<td
style="text-align: left;">/t[[：]<code>&lt;timefield&gt;</code>]</td>
<td style="text-align: left;">指定要显示或用于排序的时间字段。 可用的
<em>时间字段</em> 值为：<strong>c</strong> - 创建<strong>a</strong> -
上次访问<strong>w</strong> - 上次写入</td>
</tr>
<tr class="even">
<td style="text-align: left;">/s</td>
<td
style="text-align: left;">列出指定目录和所有子目录中指定文件名的每个匹配项。</td>
</tr>
<tr class="odd">
<td style="text-align: left;">/b</td>
<td style="text-align: left;">显示目录和文件的裸列表，没有其他信息。
<strong>/b</strong> 参数替代 <strong>/w</strong>。</td>
</tr>
<tr class="even">
<td style="text-align: left;">/l</td>
<td
style="text-align: left;">使用小写显示未排序的目录名称和文件名。</td>
</tr>
<tr class="odd">
<td style="text-align: left;">/n</td>
<td
style="text-align: left;">在屏幕最右侧显示具有文件名的长列表格式。</td>
</tr>
<tr class="even">
<td style="text-align: left;">/x</td>
<td style="text-align: left;">显示为非 8dot3 文件名生成的短名称。 显示与
<strong>/n</strong> 的显示相同，但短名称在长名称之前插入。</td>
</tr>
<tr class="odd">
<td style="text-align: left;">/c</td>
<td style="text-align: left;">以文件大小显示千位分隔符。
此选项为默认行为。 使用 <strong>/-c</strong> 隐藏分隔符。</td>
</tr>
<tr class="even">
<td style="text-align: left;">/4</td>
<td style="text-align: left;">以四位数格式显示年份。</td>
</tr>
<tr class="odd">
<td style="text-align: left;">/r</td>
<td style="text-align: left;">显示文件的备用数据流。</td>
</tr>
<tr class="even">
<td style="text-align: left;">/?</td>
<td style="text-align: left;">在命令提示符下显示帮助。</td>
</tr>
</tbody>
</table>
<h4 id="注解-1">注解</h4>
<ul>
<li><p>若要使用多个 <em>文件名</em>
参数，请使用空格、逗号或分号分隔每个文件名。</p></li>
<li><p>可以使用通配符 (***** 或 <strong>？</strong>)
来表示文件名的一个或多个字符，以及显示文件或子目录的子集。</p></li>
<li><p>可以使用通配符 *****替换任意字符串字符，例如：</p>
<ul>
<li><code>dir *.txt</code> 列出当前目录中以.txt开头的所有文件，例如
.txt、.txt1 .txt_old。</li>
<li><code>dir read *.txt</code>
列出以读取开头的当前目录中的所有文件，以及以.txt开头的扩展，例如.txt、.txt1
或.txt_old。</li>
<li><code>dir read *.*</code>
列出以任何扩展名开头的当前目录中的所有文件。</li>
</ul>
<p>星号通配符始终使用短文件名映射，因此可能会获得意外结果。
例如，以下目录包含两个文件 (t.txt2 和 t97.txt) ：</p>
<p>复制</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">C:\test&gt;<span class="built_in">dir</span> /x</span><br><span class="line">Volume <span class="keyword">in</span> drive C has no label.</span><br><span class="line">Volume Serial Number is B86A<span class="literal">-EF32</span></span><br><span class="line"></span><br><span class="line">Directory of C:\test</span><br><span class="line"></span><br><span class="line"><span class="number">11</span>/<span class="number">30</span>/<span class="number">2004</span>  <span class="number">01</span>:<span class="number">40</span> PM &lt;<span class="built_in">DIR</span>&gt;  .</span><br><span class="line"><span class="number">11</span>/<span class="number">30</span>/<span class="number">2004</span>  <span class="number">01</span>:<span class="number">40</span> PM &lt;<span class="built_in">DIR</span>&gt; ..</span><br><span class="line"><span class="number">11</span>/<span class="number">30</span>/<span class="number">2004</span>  <span class="number">11</span>:<span class="number">05</span> AM <span class="number">0</span> T97B4~<span class="number">1</span>.TXT t.txt2</span><br><span class="line"><span class="number">11</span>/<span class="number">30</span>/<span class="number">2004</span>  <span class="number">01</span>:<span class="number">16</span> PM <span class="number">0</span> t97.txt</span><br></pre></td></tr></table></figure>
<p>你可能需要键入 <code>dir t97\*</code> 将返回文件t97.txt。 但是，键入
<code>dir t97\*</code> 将返回这两个文件，因为星号通配符使用其短名称映射
<em>T97B4~1.TXT</em>匹配文件 t.txt2 到t97.txt。 同样，键入
<code>del t97\*</code> 将删除这两个文件。</p></li>
<li><p>可以使用问号 (？) 作为名称中单个字符的替代项。 例如，键入
<code>dir read???.txt</code>
列表当前目录中以读取开头且后跟最多三个字符的.txt扩展名的文件。
这包括Read.txt、Read1.txt、Read12.txt、Read123.txt和Readme1.txt，但不包括Readme12.txt。</p></li>
<li><p>如果在<em>属性</em>中使用 <strong>/a</strong>
具有多个值，则此命令仅显示具有所有指定属性的文件的名称。 例如，如果使用
<strong>/a和-h</strong> 作为属性 (使用或 <code>/a:r-h``/ar-h</code>)
，则此命令将仅显示不隐藏的只读文件的名称。</p></li>
<li><p>如果指定多个 <em>排序程序</em>
值，则此命令按第一个条件对文件名进行排序，然后按第二个条件等进行排序。
例如，如果将 <strong>/o</strong> 与<em>排序排序
(</em><code>/o:e-s``/oe-s</code>) 的 <strong>e</strong> 和
<strong>-s</strong>
参数一起使用，则此命令会按扩展名对目录和文件的名称进行排序，并首先显示最终结果。
按扩展名排序的字母顺序会导致没有扩展名的文件名首先出现，然后显示目录名称，然后使用扩展名的文件名。</p></li>
<li><p>如果使用重定向符号 (<code>&gt;</code>)
将此命令的输出发送到文件，或者如果使用管道 (<code>|</code>)
将此命令的输出发送到另一个命令，则必须使用
<code>/a:-d</code><strong>/b</strong> 仅列出文件名。 可以将
<em>文件名</em> 与 <strong>/b</strong> 和 <strong>/s</strong>
一起使用，以指定此命令是搜索当前目录及其子目录来查找与文件名匹配的所有
<em>文件名</em>。
对于找到的每个文件名，此命令仅列出驱动器号、目录名称、文件名和文件扩展名
(每行一个路径) 。 在使用管道将此命令的输出发送到另一个命令之前，应在
Autoexec.nt 文件中设置 <em>TEMP</em> 环境变量。</p></li>
</ul>
<h2 id="示例-1">示例</h2>
<p>若要按字母顺序显示所有目录，按宽格式显示，并在每个屏幕后暂停，请确保根目录是当前目录，然后键入：</p>
<p>复制</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> /s/w/o/p</span><br></pre></td></tr></table></figure>
<p>输出列出了根目录、子目录和根目录中的文件，包括扩展。
此命令还会列出树中每个子目录中的子目录名称和文件名。</p>
<p>若要更改前面的示例，以便 <strong>dir</strong>
显示文件名和扩展名，但省略目录名称，请键入：</p>
<p>复制</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> /s/w/o/p/a:<span class="literal">-d</span></span><br></pre></td></tr></table></figure>
<p>若要打印目录列表，请键入：</p>
<p>复制</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> &gt; prn</span><br></pre></td></tr></table></figure>
<p>指定 <strong>prn</strong> 时，目录列表将发送到附加到 LPT1
端口的打印机。 如果打印机附加到其他端口，则必须将 <strong>prn</strong>
替换为正确的端口的名称。</p>
<p>还可以将 <strong>dir</strong> 命令的输出重定向到文件，方法是将
<strong>prn</strong> 替换为文件名。 还可以键入路径。 例如，若要将
<strong>dir</strong> 输出定向到记录目录中的文件dir.doc，请键入：</p>
<p>复制</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> &gt; \records\dir.doc</span><br></pre></td></tr></table></figure>
<p>如果dir.doc不存在， <strong>则 dir</strong> 会创建该目录，除非
<strong>记录</strong> 目录不存在。 在这种情况下，将显示以下消息：</p>
<p>复制</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">File creation error</span><br></pre></td></tr></table></figure>
<p>若要在驱动器 C
上的所有目录中显示具有.txt扩展名的所有文件名的列表，请键入：</p>
<p>复制</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">dir</span> c:\*.txt /w/o/s/p</span><br></pre></td></tr></table></figure>
<p><strong>dir</strong>
命令以宽格式显示每个目录中匹配文件名的按字母顺序排列的列表，每次屏幕填充时都会暂停，直到按任何键继续。</p>
<h1 id="mkdir">mkdir</h1>
<ul>
<li>语法</li>
<li>其他参考</li>
</ul>
<p>创建目录或子目录。 默认情况下启用的命令扩展允许你使用单个
<strong>mkdir</strong> 命令在指定路径中创建中间目录。</p>
<blockquote>
<p>备注：此命令与 md 命令相同。</p>
</blockquote>
<h2 id="语法-2">语法</h2>
<p>复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir [&lt;drive&gt;:]&lt;path&gt;</span><br></pre></td></tr></table></figure>
<h3 id="参数-2">参数</h3>
<table>
<colgroup>
<col style="width: 14%" />
<col style="width: 85%" />
</colgroup>
<thead>
<tr class="header">
<th style="text-align: left;">参数</th>
<th style="text-align: left;">说明</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: left;"><code>&lt;drive&gt;</code>:</td>
<td style="text-align: left;">指定要在其上创建新目录的驱动器。</td>
</tr>
<tr class="even">
<td style="text-align: left;"><code>&lt;path&gt;</code></td>
<td style="text-align: left;">指定新目录的名称和位置。
任何单个路径的最大长度由文件系统确定。 这是必需参数。</td>
</tr>
<tr class="odd">
<td style="text-align: left;">/?</td>
<td style="text-align: left;">在命令提示符下显示帮助。</td>
</tr>
</tbody>
</table>
<h3 id="示例-2">示例</h3>
<p>若要在当前目录中创建名为 <em>Directory1</em> 的目录，请键入：</p>
<p>复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir Directory1</span><br></pre></td></tr></table></figure>
<p>若要在启用了命令扩展的情况下在根目录中创建目录树 *Taxes，请键入：</p>
<p>复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir \Taxes\Property\Current</span><br></pre></td></tr></table></figure>
<p>如前面的示例所示，若要在根目录中创建目录树
*Taxes，但禁用了命令扩展，请键入以下命令序列：</p>
<p>复制</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir \Taxes</span><br><span class="line">mkdir \Taxes\Property</span><br><span class="line">mkdir \Taxes\Property\Current</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>网络安全</category>
        <category>Windows与网络基础</category>
      </categories>
      <tags>
        <tag>网络安全</tag>
      </tags>
  </entry>
  <entry>
    <title>“Hexo部署到Github后文件夹名大小写引起的问题”</title>
    <url>/2022/10/03/%E2%80%9CHexo%E9%83%A8%E7%BD%B2%E5%88%B0Github%E5%90%8E%E6%96%87%E4%BB%B6%E5%A4%B9%E5%90%8D%E5%A4%A7%E5%B0%8F%E5%86%99%E5%BC%95%E8%B5%B7%E7%9A%84%E9%97%AE%E9%A2%98%E2%80%9D/</url>
    <content><![CDATA[<h1
id="hexo部署到github后文件夹名大小写引起的问题">Hexo部署到Github后文件夹名大小写引起的问题</h1>
<h2 id="问题描述">问题描述</h2>
<p>最近一直在使用<code>Hexo</code>搭建博客，然后将其部署到GIthub上，然而今天写完博客上传之后，发现<code>Tags</code>和<code>Categories</code>页面变为404了，点击对应的Tag或Categories时会出现路径无法找到从而跳转到404页面，然后我在本地使用<code>hexo s</code>进行预览，发现一切正常。</p>
<span id="more"></span>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/404%E9%A1%B5%E9%9D%A2.png" /></p>
<h2 id="原因">原因</h2>
<p>然而我最近为了规范项目的目录，将项目的文件名全都改成了小写，本地预览是没有问题的，但是提交到远程仓库之后，问题就出现了：git默认是不区分大小写的，此即便文件夹的大小写发生了变更，git也会表现出置之不理，导致无法找到路径。</p>
<h2 id="解决方案">解决方案</h2>
<p>我的解决思路是先调整git的配置文件，使其大小写敏感，然后删除git项目中已经存在的大写文件夹，最终使用<code>Hexo</code>重新生成并部署</p>
<h2 id="解决步骤">解决步骤</h2>
<p>进入到Hexo项目的文件夹中，比如Hexo项目文件夹名称为blog：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd blog</span><br></pre></td></tr></table></figure>
<p>进入<code>.deploy_git</code>文件夹
（<code>.deploy_git</code>是隐藏文件夹）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd .deploy_git</span><br></pre></td></tr></table></figure>
<p>进入<code>.git</code>文件夹</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd .git</span><br></pre></td></tr></table></figure>
<p>打开目录下的<code>config</code>文件并修改<code>ignorecase = true</code>为<code>ignorecase = false</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[core]</span><br><span class="line">	repositoryformatversion = 0</span><br><span class="line">	filemode = false</span><br><span class="line">	bare = false</span><br><span class="line">	logallrefupdates = true</span><br><span class="line">	symlinks = false</span><br><span class="line">	ignorecase = true</span><br></pre></td></tr></table></figure>
<p>接下来进入github中，在web模式下删除所有大写文件夹</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/github%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6%E5%A4%B9.png" /></p>
<p>之后在项目根目录下执行命令重新生成文件并部署到Github上</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>
<p>之后等待更新后重新加载发现还是404页面并且GitHub里面已经删除的大写文件夹又重新恢复了</p>
<p>然后重新整理思路</p>
<p>删除本地的<code>.deploy_git</code>目录</p>
<p>再次运行<code>hexo d</code>提交，hexo会重置git仓库，并重新生成所有文件!</p>
<p>打开github查看，问题解决！</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>从零开始搭建自己的博客</title>
    <url>/2022/04/03/%E2%80%9C%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2%E2%80%9D/</url>
    <content><![CDATA[<blockquote>
<p><strong>博客</strong>：其实博客的正式名称是网络日记，见名知意，是使用特定软件在网络上出版发表和张贴个人文章的人，或者是一种由个人管理不定期更新文章的网站。</p>
</blockquote>
<h1 id="前言">前言</h1>
<p>对我来说，我希望有一个监督自己工作、记录自己生活和学习过程的工具，但是对比于第三方博客来说，个人博客可以按照自己的主观想法去任意设计、任意管理，也不用担忧自己发布的文章随时面临被删甚至被关闭的风险，个人博客更具有自主权。</p>
<p>在搭建博客之前，我关于使用何种框架搭建犹豫了许久，最终我决定了使用
Hexo 框架搭建我的个人博客。</p>
<span id="more"></span>
<h1 id="hexo-框架介绍">Hexo 框架介绍</h1>
<p>Hexo 是一个快速，简单和强大的博客框架。你用<a
href="http://daringfireball.net/projects/markdown/">Markdown</a>（或其他渲染引擎）解析文章，
Hexo 会在几秒钟内生成具有漂亮主题的静态网页。</p>
<h2 id="选择-hexo-的原因">选择 Hexo 的原因</h2>
<ul>
<li>速度极快：Node.js
所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</li>
<li>支持MarkDown：Hexo 支持 GitHub Flavored Markdown
的所有功能，甚至可以整合 Octopress 的大多数插件。</li>
<li>一键部署：只需一条指令即可部署到 GitHub Pages, Heroku
或其他平台。</li>
<li>插件和可扩展性：这个也是hexo很强大的一个地方，强大的 API
带来无限的可能，与数种模板引擎（EJS，Pug，Nunjucks）和工具（Babel，PostCSS，Less/Sass）轻易集成。</li>
</ul>
<h1 id="hexo博客框架搭建步骤">Hexo博客框架搭建步骤</h1>
<h2 id="node.js-安装">Node.js 安装</h2>
<p>Hexo 是使用 Node.js 开发的，所以我们安装 Hexo 之前需要先安装 Node.js
环境。</p>
<p>Node.js 是什么？简单的说 Node.js 就是运行在服务端的 JavaScript
。安装了 Node.js 环境，就可以不用依赖浏览器就可以运行 js
代码，其实它也是基于 Chrome 引擎开发的一个开源项目。简单理解， Node.js
对于 js 代码的作用类似 Python 解释器对于 Python 代码的作用。</p>
<p>这里注意，不是说博客框架必须用 Node.js
来开发，博客框架本质上是一个网站，可以用任何语言开发，也有用 Python 的
Flask/Django 或者 Java 开发的博客框架，只是没有 Hexo 这么流行。</p>
<p>Windows：进入<a
href="https://nodejs.org/en/">Node.js</a>官网点击下载，下载完成后，傻瓜式下一步即可</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/nodejs%E5%AE%98%E7%BD%91.png" /></p>
<p>Linux：使用以下两行代码进行安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure>
<p>安装完成之后，输入以下两行命令查看版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure>
<h2 id="git-安装">Git 安装</h2>
<p>Git
是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的
hexo 博客文章，上传到 GitHub 的工具。</p>
<p>Windows：进入<a href="https://git-scm.com/">Git
官网</a>点击下载即可，下载完成之后会有一个 Git Bush 的命令行工具用来使用
Git</p>
<p><img data-src="https://baoxinwen.github.io/cloudimg/blogimg/git%E5%AE%98%E7%BD%91.png" /></p>
<p>Linux：对于Linux来说更加简单，只需要输入一行代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install git</span><br></pre></td></tr></table></figure>
<p>输入以下代码查看版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure>
<h2 id="hexo-安装">Hexo 安装</h2>
<p>前文中已经成功安装了 Node.js 和 Git 后，就可以进行 Hexo
的安装了，我们需要先创建一个文件夹 Blog
（用来存放你的个人博客的文件），然后进入该文件夹，右键打开 Git Bush</p>
<p>输入以下命令进行安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>
<p>安装完成之后，使用以下命令查看版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>
<p>接下来进行 Hexo 的初始化</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>
<p>在初始化结束之后，我们能看到 Blog 文件夹多出以下文件</p>
<ul>
<li>node_modules: 依赖包</li>
<li>public：公共文件夹，用于存放生产的站点文件</li>
<li>scaffolds：模板文件夹</li>
<li>source：资源文件夹，用来存放内容</li>
<li>themes：主题文件夹</li>
<li>_config.yml：博客的配置文件</li>
<li>package.json ：应用程序的信息</li>
</ul>
<p>在这之后，我们启动本地博客服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p>结果如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ hexo s</span><br><span class="line">INFO  Validating config</span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>
<p>然后打开游览器输入 http://localhost:4000
就可以看到生成的个人博客了。</p>
<p>到此为止，我们已经完成了 Hexo 的简单部署。</p>
<h2 id="hexo-主题美化">Hexo 主题美化</h2>
<p>在第一次初始化的时候 Hexo 已经帮我们写了一篇名为 Hello World
的文章，默认的主题比较丑，既然是我们的个人博客，我们肯定想要其更加美观，更有意思，更有个性，所以我们需要安装各种不同风格的主题。</p>
<h4 id="找到合适的-hexo-主题">找到合适的 Hexo 主题</h4>
<p>Hexo 官网上</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>一个特殊的人</title>
    <url>/2022/09/17/%E4%B8%80%E4%B8%AA%E7%89%B9%E6%AE%8A%E7%9A%84%E4%BA%BA/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">
  <script id="hbeData" type="hbeData" data-hmacdigest="7265566d0fb98cd1334c95de578ba69a320473ee50e0666cfd6e0ea8870d5968">9e60957532baee991e944ab8c631029a28a17d109efc5ce194ca8fede1e603715ff1f07acad538a387ce87f092b78f912025b975a376360f9b453f5767a1df94d508aac796a2d375624a59eda2a989c675ff819f2004840b2cc18635e3d2163c9dc4214555e25237f701c832532d3857b030e3a2f14a43136e7b677c3190710cfeb7edef7b535292783bb3a243ab394e0c64f7224dcc5e4198ffc21ee123f9b38d670c22d58313c1672a18d11500f28e8c95dde805f32b503323f434e38410f934168c189966e4c94ba48d7a514cc43d254ca5290703ca476f5b1aa2eea322c9010fde3e7e3bef12db2ea3a3aba5be733b98696575405fc53537e78a1f3a5db0b87acda7b2886ce6478337191dbcc7d7da123d3c86e35f4baf130e3121dbbd8c370a9b9df5b7b9466027420538d2a5b1dfa41b142fe24747fd8c69195c9c4f901ef7fe3a25d92fe5ab411e8f902a8e8447f2bbb598db6fa6af3361c49585d31b14e598251864c77040ba121203e73b47eaa43c9b0c4e4ea106fbabbc9c3f79f0044c62369ef6c5f2e9dbc65b3d988eb9123d9fa6f52592ecc259a63f7e009820f494764359c76e256dde90d99441c7555e5bb4dcc6ad23d89d34754f7c4ef8dba5f6bfe5336dbccb78bd26ce4b1f7bb9f25541770c38a96aaaef48a420aea46f33b34ac760b6066c0ceda269bb683c3fa2a8b2787560e536f24c358f17217c86446289ad73aa22d674a666c68ac0b79d2cfb6e07b6f2d16b53e7f9054d62e27920a913805cafb06f2c5880e1e01dacdd90a830c3cecb0a329cebc6380edef6d85c0826ad2f7233a86d2013eaaeb9b91fca621054f07e4b61eff7431645297e46857ea460ec7ba18f0178cc2a1b8a72b7f8c2309bdd523b45f6569a6680c0937f646087c7c4677da71f2f5b52352b814b05a7056db3fc640cc6a1678df78d7ad620e6c9a6d9915120bf5f2b78394fa07970ec6530407a55329c7021480c2a79b31548908b7af53162690e56844704e7b9e071d86b89770b5b1ee8712c9ddd334c6459d695f75d370f3e0027415c779b68bf04dbb7fbbcd510214b673461c907ae2493e669cbfc6b4b7b524ec9ab9f55d0a830399423a26a470aa77feef9654c9b90653954c9906f9f14d2d0406b0a2fbff2f88a11674d66274e15eb19ad597bf57bc2aac8032dda03c4e219d64fd3e454bb4001eecfd9b20fff4e0023303f977aa3a6a824dc57e895c4b615fe688944fcbcf4755f2fa73ab5b4c76a7930c0a5e4563bb6f578c781c152e54d950dd5679cca3b347b3b2c69610b9c30f80ac7ce0de57ede27454f260a318a1d720eb379e6cec3f64bed03661d8ddf229007a8b8c84a98a6d6446120dd9d0c8851b36e829835c81c493838c91079fd83ddd8343e4ee58bd548c0bf7a74264cc66beaffafb775d5a112a5060d5369d37ecfc77a82f44073cfcde76e15017fb6a2f4b8394d140afdc3a57fba444f310f87f0a7d0326a9b9e4d9218bf3fabfb7c000ee5c30c52faa8aa7d1a2e45a9995c40c721fe57a4211a0a5c65eb285f97176c80f0853554189bfacddc8bb6dfee182bd8c04ec486fe6108f5c82a21989364b30110d6c00ae6d53ba628c6e2d0921781ada1ae9673e703e4dacad27b100f07e49786b44cd6fdc739fa5a54ae1730688a094254f55e97b32fb4741da3e533826cb4d150b11ea0d276d689b5c0194e6f353290eb22988be222c872da8ea9201211afc3bbf5c869f4523b2ee8287425839fb0cd68be49ad14383cd6311ec92933deff26de77d253a4e3d338480125b2d97aebd5cdf28cc7e0c970c2413753c6a227918df1aee09ee4061bca34e3e32215bb54986247ce259a34bcaeb301eb4b7a579c9f48afe2e87886cae6e2924c1aa57ede9400e4a9195b9db3097dd1edd4881fe51c0d5b91b670de52fbc39dba3e3d064d20ccfd7c3ec6205b46807a513816f4982d591c870d9484b0eb3d62d3c81a80932793f2ea228a5c61415a018aba1fbb92036a24360c741697c6786aa5ef50865603b03ce5d73bb19d275c08033107adc24fa0b33c9fd7980a3224ac4598f0d281bb5b54e44de7f1eae80f3a528392ab698b4895e2430f02b40840f9fd0240f9673e947cf5fa3fbea8f96270616fd4b54114a5d1ce88e03eabcf44c85b117ed0533eda75df1a049ab8655300870d5fbfa161330841ce0eba17401967855b609e1ddb777c13789abc2ed390aa84d66072036ffb22c88ab9d3b0a1852b783546837d75de9646aef5311ac6a6dc59deae8149b4cefae4b3e2a0ef28da3512eafff8bc249dac384d1ceaadacfdefc27a488c35e0fce9c036aef007cd2e4746cddae1861a6374db9475487c468b67aff90a982b12cf1a8a8b632481887f3e56e0452992a8666de18bd7c7f3cb87ec8761480e2b3f53de176812d711c64f8c6a09d16dcedcfae062c6de208894e55415a950508264c4b42726b8ede4e20a0fc4ef964577f1d27fc626e268de94d0055fc8dacfa25998e1164e79b2692da47f6de6bb187888912ba7b467291cf3f5ac24f4901b2829227bb3b6ba793da1e4c33a1d49c70c9598d6f626f780d6f36b72c0645448b481386ca97c633e3b98a19eeea63adc388a0270a4f152c3f261b02d65421eb3e5961800f9ac91b7168b3f5a5e27442519ec952cd30b485de9981298bf510a01550d092152acd0f00d2441da4574eef34a3a976815a5b688988f4805f8adfd27d817c0b2ebb18d83979de2001df198f2dac70e99e9f40cfb550888ace13f580e30586f8739d0316f3d5822c7f4a7fbf36c52bc33471e55076f1828bd7f53b465391546d5bffae2c3e18b994418ced4c09c66ff6b050c29f59da42eb23f67c1b0b8c1c811b56648891d8be084ee567fd37efc9bc65d69fff7f897346731a97de32a415ecbc66bfb12bafe99831c3d1a9749a527b3862564b7400f07108593887e29d11c62a006bb32d58a33d6e9a88a78896943af077bc68164be6388fa31e2249bc64237f9ee71a6eb7d27870984729a2255bf699586fbebf8229ae22bc9d78c6d54e6ae7395d455282cfd1aff00bee191d5d5c14e4e95d7b6566043b575cb60e93f0314841838e06bf12b91e9854e8653a73f9135945093cb9dea30c0ae692663f106470deeb2f2c5914bc454b77fd395d26dde0a73f1096a2983f8eba28b6ebf1d0d447bd21c67ca7acc94af2808fdd8b0ea210774e73355dfd309e3d6af5daa77796d3521a1f6c76ced529f310a9d395b3dfd470bf97718718b65eb9f9d5221344dc0e165f67309f07fdca684aacd5e42e9eeacabadc875924f679e67bc984a671c4c21490adb78b4cd720eeff2f38370763796a2a22482b9cf8c74990e9eabff144d898412a8e30a8a192c0d0b48cdfc1a56705167ac7109c51810988bc04af56bd85839fcf1f908ae129b2ae49407441315354167153020f260ecb44808b3e499ad5c1890487fee7c48802da861be66c62b5d389ba230ba920e0747d54c8cbfac02c4017aebc7ba57e4144124d56554c4401ca44abbcecf7258d1d6715ba1a8f5031a52725cdc9dc508a49af9da36eb89e75259fd711e13c89f3d3c4fb23a6bc64514d24849bd90177f4a25574dd9d7a1c9e538cb26ee45e0a4ba49e95ac875888b34b56db3a32c1089f17c74f8e9c65c9419e9b6f2f6126d5dc142eb946d594a555e48a3026743f1dd77c33c36920640f06e2f3f3517519c529d46ac96bf7321573955f284f781645fe1e5122e9dbcaf694715413d15c5a776fee1f59225964f7f43a5be3073612e951eb2bc587cbb026f19da76df515582abc034e945324cf4cf015fab83e5dffb1d64827b0adedc3aa3ab41bda9feb6ff7e97781be7bfc2c7341226e1bbacf6f2b51e33586b772eaa7839f461aa07af27d3dbd94c7c4c2783ec62d451342b1e84b129ee65fc9d74940154d760a13f7ec97f48d20dd80432abaeb019546d9f85bb398db95e01929d3c948d40552e08377b7f75e051c33758d25faee699c5fd43489460f50a742f095f6109bf67cbe5ca96b8af46a1fab8599dd34493f508f6135bb10d461dd8871d3811e2d57a15dae69d8a0a6081c2a1571ccfc83b3249f86bfbf64f6eb506c579ca51d7e4ecea9b05e06c029ba7a17f2af721d72c523c1a09aa3cc2cb40bee609a3fdc871de8eabb261c4af0627c70d34a20ac6d8346870bb66890dd21f53ac3a3d8bfcf188ca6eaedf87be303a3a4eb0310ac3c72c1160841cfb2454d8b67727ed875b8a4d2ba350464beee4148967f9d2f3dcc5aab16b7019eb277701335a0c8a46ae8c095be6f5053cf4225a1c3ed743883c8bb8e8ef41b33dd28d3cafceba54e9a7992264b82cf7e9c5ba83353a6eece31a3c87e68d841e5f25f9154c767cacb9dd3ab56943e539850c638109216de9bef209eb0bcd71688c7d94d13cd597edb65fd9da1b58f30c76bd3810d9e5c391cd863680c05cb228d31cb6b8432f8b7305b1c4127c510f80d838c4afe0b5dd7e1d14e6a9de86f418bf51931d6d5f03af660c4be2be2947635ff4954f524d6712913ee522a78fac036f292c07ff9b1b13d1682ab97777811e35fa20075e5f12c1e63ea7adde55f373edb1c7ae12fe2218134a29c55550a59f7abaf082f85fa95a00f5c04cc49bc18c58cb8cab4728563f514baca299ce50b134adf39fd036d629d390cb8ae51b4c8fd820d8aa8460936bd87a38c080d22a5c374da25b2941e9879c3ffe98316eeac03ba728e129191b1c1ed1c1670e818a64b8cd18d0a3e5a27d60ffa954dbac91508f9dadb8aa6576c688aa99effcd14910d4642e141a72d7d10e54e2740814d9c4364f5b4beaa7cb0ac9f72c968d8c3d397fb65dcb1d72f89e3de2ef7eb011d663429be24af60bf9821162aa616fcde763a1eeb2b0e725cbadeb5ab1a00f5530422d66eb17c55aa8fa17eee41e9745dd013c479a257623b168fc1ca4677f93e9a3550f217c8761f667364723b236602108b5c7f685c86e715367c3e46b1bc54a7bf2da9dec0156d575f4c727b1a41d10e1b9680c3927c5be5a0fceeb6c6ddc92a6edf58b6edc819582105fce73b49f211f9e30470e5a86e9a24fd17ff1436e6dcbd5a69f2bcafba02c86ba13af5ea763f65fb9a5d7d2699810e558b8b7c05e627475678888fc4ed5748b875b8521ea3c996013285916d9cc23ba56a6ba300a82b0a354dd34372e93f52c546f98b0973c58d997f05b39f3c8f7a8c9f3ea9e300c5fcc18ec9a29a270891bcfcacd0dd1cc055e39a2734c0b40a83e6421938b33147c9c1ce94d9ab731583e36a2a0a3f9394306f0cf4afd8abe0b27ec31848e165d42b6fd3bc8d38be2425c47036c31ab28cc1724b6cfe61745376848c26f689fa67e375430c1e1bdb8e66942</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-flip">
      <input class="hbe hbe-input-field hbe-input-field-flip" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-flip" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-flip" data-content="当前文章暂不对外可见，请输入密码后查看！">当前文章暂不对外可见，请输入密码后查看！</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>路路</category>
      </categories>
      <tags>
        <tag>一生所爱</tag>
      </tags>
  </entry>
</search>
